{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alokc\\\\OneDrive\\\\Desktop\\\\Pem_Joy\\\\client\\\\src\\\\components\\\\PEMs\\\\PEMs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../Navbar/Navbar\";\nimport PEM from \"./PEM/PEM\";\nimport axios from \"axios\";\nimport { getDistance } from \"geolib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PEMs(_ref) {\n  _s();\n\n  let {\n    customer\n  } = _ref;\n  // console.log(customer.latitude);\n  const [mainPems, setMainPems] = useState([]);\n  const [pems, setpems] = useState([]);\n  const a = 1;\n  useEffect(() => {\n    axios.get(\"/pem\").then(Response => {\n      setMainPems(Response.data);\n      setpems(Response.data);\n      console.log(\"a\");\n    }).catch(error => console.log(error));\n  }, [a]); // -----------------------------------------DISTANCE CALCULATION------------------------------------------------\n  // console.log(\n\n  pems.map(pem => pem.distance = getDistance({\n    latitude: pem.latitude,\n    longitude: pem.longitude\n  }, {\n    latitude: customer.latitude,\n    longitude: customer.longitude\n  }) / 1000); // );\n  // ----------------------------------------SORTING-----------------------------------------------------\n\n  function compareDistance(a, b) {\n    if (a.distance < b.distance) {\n      return -1;\n    }\n\n    if (a.distance > b.distance) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  var sortWorkersBydistance = () => {\n    pems.sort(compareDistance);\n  }; // --------------------------------------------FILTERING---------------------------------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PEM, {\n      workers: pems,\n      sortWorkersBydistance: sortWorkersBydistance,\n      setpems: setpems,\n      mainPems: mainPems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PEMs, \"5oxYjEy18q2E3ttynfxvEnFGcaU=\");\n\n_c = PEMs;\n\nvar _c;\n\n$RefreshReg$(_c, \"PEMs\");","map":{"version":3,"sources":["C:/Users/alokc/OneDrive/Desktop/Pem_Joy/client/src/components/PEMs/PEMs.js"],"names":["React","useState","useEffect","Navbar","PEM","axios","getDistance","PEMs","customer","mainPems","setMainPems","pems","setpems","a","get","then","Response","data","console","log","catch","error","map","pem","distance","latitude","longitude","compareDistance","b","sortWorkersBydistance","sort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,QAA5B;;;AAEA,eAAe,SAASC,IAAT,OAA4B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMY,CAAC,GAAG,CAAV;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFS,GADH,CACO,MADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBN,MAAAA,WAAW,CAACM,QAAQ,CAACC,IAAV,CAAX;AACAL,MAAAA,OAAO,CAACI,QAAQ,CAACC,IAAV,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAPpB;AAQD,GATQ,EASN,CAACR,CAAD,CATM,CAAT,CALyC,CAgBzC;AACA;;AACAF,EAAAA,IAAI,CAACW,GAAL,CACGC,GAAD,IACGA,GAAG,CAACC,QAAJ,GACClB,WAAW,CACT;AAAEmB,IAAAA,QAAQ,EAAEF,GAAG,CAACE,QAAhB;AAA0BC,IAAAA,SAAS,EAAEH,GAAG,CAACG;AAAzC,GADS,EAET;AAAED,IAAAA,QAAQ,EAAEjB,QAAQ,CAACiB,QAArB;AAA+BC,IAAAA,SAAS,EAAElB,QAAQ,CAACkB;AAAnD,GAFS,CAAX,GAGI,IANV,EAlByC,CA0BzC;AACA;;AAEA,WAASC,eAAT,CAAyBd,CAAzB,EAA4Be,CAA5B,EAA+B;AAC7B,QAAIf,CAAC,CAACW,QAAF,GAAaI,CAAC,CAACJ,QAAnB,EAA6B;AAC3B,aAAO,CAAC,CAAR;AACD;;AACD,QAAIX,CAAC,CAACW,QAAF,GAAaI,CAAC,CAACJ,QAAnB,EAA6B;AAC3B,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD;;AAED,MAAIK,qBAAqB,GAAG,MAAM;AAChClB,IAAAA,IAAI,CAACmB,IAAL,CAAUH,eAAV;AACD,GAFD,CAvCyC,CA0CzC;;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,GAAD;AACE,MAAA,OAAO,EAAEhB,IADX;AAEE,MAAA,qBAAqB,EAAEkB,qBAFzB;AAGE,MAAA,OAAO,EAAEjB,OAHX;AAIE,MAAA,QAAQ,EAAEH;AAJZ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAaD;;GAzDuBF,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport PEM from \"./PEM/PEM\";\r\nimport axios from \"axios\";\r\nimport { getDistance } from \"geolib\";\r\n\r\nexport default function PEMs({ customer }) {\r\n  // console.log(customer.latitude);\r\n  const [mainPems, setMainPems] = useState([]);\r\n  const [pems, setpems] = useState([]);\r\n  const a = 1;\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/pem\")\r\n      .then((Response) => {\r\n        setMainPems(Response.data);\r\n        setpems(Response.data);\r\n        console.log(\"a\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [a]);\r\n\r\n  // -----------------------------------------DISTANCE CALCULATION------------------------------------------------\r\n  // console.log(\r\n  pems.map(\r\n    (pem) =>\r\n      (pem.distance =\r\n        getDistance(\r\n          { latitude: pem.latitude, longitude: pem.longitude },\r\n          { latitude: customer.latitude, longitude: customer.longitude }\r\n        ) / 1000)\r\n  );\r\n  // );\r\n  // ----------------------------------------SORTING-----------------------------------------------------\r\n\r\n  function compareDistance(a, b) {\r\n    if (a.distance < b.distance) {\r\n      return -1;\r\n    }\r\n    if (a.distance > b.distance) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  var sortWorkersBydistance = () => {\r\n    pems.sort(compareDistance);\r\n  };\r\n  // --------------------------------------------FILTERING---------------------------------------------------\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <br />\r\n      <br />\r\n      <PEM\r\n        workers={pems}\r\n        sortWorkersBydistance={sortWorkersBydistance}\r\n        setpems={setpems}\r\n        mainPems={mainPems}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}